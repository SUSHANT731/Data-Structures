There is a one-dimensional garden on the x-axis. The garden starts at the point 0 and ends at the point n. (i.e The length of the garden is n).

There are n + 1 taps located at points [0, 1, ..., n] in the garden.

Given an integer n and an integer array ranges of length n + 1 where ranges[i] (0-indexed) means the i-th tap can water the area [i - ranges[i], i + ranges[i]] if it was open.

Return the minimum number of taps that should be open to water the whole garden, If the garden cannot be watered return -1.


Program:

   public int minTaps(int n, int[] ranges) {
       
      int min = 0;
      int max = 0;
      int open = 0;
      int index = 0;
      while(max<n){ //10
          
          for(int i=index;i<ranges.length;i++){      
            if(i-ranges[i]<=min && i+ranges[i]>max){
                max = i+ranges[i];  
                index = i;
            }
          }
          if(min==max)return -1;
          open++;
          min = max;    
      }
        
     return open;
    }
